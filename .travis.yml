language: generic

git:
  depth: 10

cache:
  directories:
  - $HOME/.ccache

env:
  global:
   - CCACHE_TEMPDIR=/tmp/.ccache-temp
   - CCACHE_COMPRESS=1

matrix:
  include:
    - os: linux
      sudo: false
      compiler: ": gcc5"
      env: JOBS=10 CXX="ccache g++-5" CXXFLAGS="-D_GLIBCXX_USE_CXX11_ABI=0"
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: [ 'libstdc++-5-dev','g++-5', 'xutils-dev']
    - os: linux
      sudo: false
      compiler: ": clang"
      env: JOBS=10 CXX="ccache clang++-3.8 -Qunused-arguments"
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: [ 'libstdc++-5-dev', 'xutils-dev']
    - os: linux
      sudo: false
      compiler: ": clang-coverage"
      env: JOBS=10 CXX="ccache clang++-3.8 -Qunused-arguments" COVERAGE=true BUILDTYPE=Debug
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: [ 'libstdc++-5-dev', 'xutils-dev']
    - os: osx
      compiler: clang
      env: JOBS=10
      # https://docs.travis-ci.com/user/languages/objective-c/#Supported-OS-X-iOS-SDK-versions
      osx_image: xcode7 # upgrades clang from 6 -> 7

before_install:
 - source ./bootstrap.sh
 - |
   if [[ $(uname -s) == 'Linux' ]]; then
     mason install clang 3.8.1
     export PATH=$(mason prefix clang 3.8.1)/bin:${PATH}
     which clang++
     export LLVM_COV="$(mason prefix clang 3.8.1)/bin/llvm-cov"
   fi

install:
 - source ./scripts/build.sh

before_script:
 - ./scripts/coverage.sh

script:
 # make sure tileinfo command works
 - ./build/${BUILDTYPE:-Release}/tileinfo examples/data/14_2620_6331.vector.mvt.z

notifications:
  slack:
    secure: eP79cXpZ3zyVarMooLYi75C5XBS65SJkf12h25hLDmoaQD+aX0u3+/hivE3jxi8KI8v1Izpzf06aCGHL1lx/xXGg2uuiM6dtZTou1mJJ4oFsxzOJFfLXhsUO1+qXkJJG1xoaLpbSdX/y+2dfe0xKTm4zAlluj2DvwZO+R9djLGM=
